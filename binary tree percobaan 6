class BinaryTree<T> { 
  dynamic root;

  void printLevelOrder() {
    int h = height(root);
    for (int i = 0; i <= h; i++) {
      printCurrentLevel(root, i);
    }
  }

  int height(dynamic node) {
    if (node == null) {
      return 0;
    } else {
      int lheight = height(node.left);
      int rheight = height(node.right);
      return lheight > rheight ? lheight + 1 : rheight + 1;
    }
  }

  void printCurrentLevel(dynamic node, int level) {
    if (node != null) {
      if (level == 0) {
        print('${node.key} ');
      } else if (level >= 1) {
        printCurrentLevel(node.left, level - 1);
        printCurrentLevel(node.right, level - 1);
      }
    }
  }
}
